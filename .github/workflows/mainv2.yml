name: Python CI/CD with SonarCloud, DAST, Docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # ---------------------------
  # SonarCloud Static Code Analysis
  # ---------------------------
  sonar:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code
      - uses: actions/checkout@v2

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Set up Java for SonarScanner
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      # Install SonarScanner CLI
      - name: Install SonarScanner CLI
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.1.3023-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.8.1.3023-linux /opt/sonar-scanner
          echo "/opt/sonar-scanner/bin" >> $GITHUB_PATH
          sonar-scanner --version

      # Run SonarCloud Scan
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=sandeshhypha-eng_docker
            -Dsonar.organization=sandeshhypha-eng
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ad37d70917d9acbfc5429a3a7c5f65bc8bad45a8

  # ---------------------------
  # OWASP DAST Scan using ZAP
  # ---------------------------
  dast:
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Pull ZAP Docker image and run baseline scan
      - name: Run OWASP DAST
        run: |
          docker pull ghcr.io/zaproxy/zaproxy:latest
          docker run --rm -v $(pwd):/zap/wrk --user $(id -u):$(id -g) \
            ghcr.io/zaproxy/zaproxy:latest zap-baseline.py -t http://localhost:3000 -r zap_report.html

  # ---------------------------
  # Build Python Application
  # ---------------------------
  build:
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run tests (optional)
      - name: Run tests
        run: |
          if [ -f pytest.ini ] || [ -d tests ]; then pytest; fi

  # ---------------------------
  # Build and Scan Docker Image
  # ---------------------------
  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Build Docker image
      - name: Build Docker image
        run: docker build -t your_dockerhub_username/your_image_name:latest .

      # Scan Docker image with Trivy
      - name: Scan Docker image
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL your_dockerhub_username/your_image_name:latest

  # ---------------------------
  # Push Docker Image to Docker Hub
  # ---------------------------
  push:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: Sandesh Hypha
          password: Sandy@100!

      # Push Docker image
      - name: Push Docker image
        run: docker push your_dockerhub_username/your_image_name:latest
