name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarQube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SonarQube Scan
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          sonar-project-key: your_project_key
          sonar-project-name: your_project_name
          sonar-project-version: 1.0
          sonar-host-url: https://sonarcloud.io
          sonar-login: ${{ secrets.SONAR_TOKEN }}

  dast:
    name: OWASP DAST Scan
    runs-on: ubuntu-latest
    needs: sonarQube
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run OWASP DAST
        run: |
          docker run --rm -v $(pwd):/src owasp/zap2docker-stable zap-baseline.py -t http://localhost:3000 -r zap_report.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

  docker:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t your_dockerhub_username/your_image_name:latest .

      - name: Scan Docker image with Trivy
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL your_dockerhub_username/your_image_name:latest

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push your_dockerhub_username/your_image_name:latest
