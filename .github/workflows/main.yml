name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonarQube:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'  # Match your project

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'
          
      - name: Install SonarScanner CLI
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.1.3023-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.8.1.3023-linux /opt/sonar-scanner
          export PATH=$PATH:/opt/sonar-scanner/bin
          sonar-scanner --version
          
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v1
        with:
          args: >
            -Dsonar.projectKey=sandeshhypha-eng_docker
            -Dsonar.organization=sandeshhypha-eng
            -Dsonar.projectName=docker
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
        env:
          SONAR_TOKEN: ad37d70917d9acbfc5429a3a7c5f65bc8bad45a8


  dast:
    name: OWASP DAST Scan
    runs-on: ubuntu-latest
    needs: sonarQube
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run OWASP DAST
        run: |
          docker run --rm -v $(pwd):/src owasp/zap2docker-stable zap-baseline.py -t http://localhost:3000 -r zap_report.html

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

  docker:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t your_dockerhub_username/your_image_name:latest .

      - name: Scan Docker image with Trivy
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL your_dockerhub_username/your_image_name:latest

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: Sandesh Hypha
          password: Sandy@100!

      - name: Push Docker image
        run: docker push your_dockerhub_username/your_image_name:latest
