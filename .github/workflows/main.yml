name: SonarCloud Scan

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Install SonarScanner CLI
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.1.3023-linux.zip
          unzip sonar-scanner.zip
          sudo mv sonar-scanner-4.8.1.3023-linux /opt/sonar-scanner
          export PATH=$PATH:/opt/sonar-scanner/bin
          sonar-scanner --version
      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=sandeshhypha-eng
            -Dsonar.projectKey=sandeshhypha-eng_docker
            -Dsonar.sources=
        env:
          SONAR_TOKEN: ad37d70917d9acbfc5429a3a7c5f65bc8bad45a8

  dast:
    name: OWASP DAST Scan
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Create report folder
        run: mkdir -p zap_reports
        
      - name: Build App Image
        run: docker build -t myapp:latest .

      - name: Start App Container
        run: docker run -d --name myapp -p 5000:5000 myapp:latest
        
      - name: Create Docker Network
        run: docker network create zapnet
        
      - name: Remove old container if exists
        run: |
          docker rm -f myapp || true
          docker rm -f zap || true
          docker network rm zapnet || true

      - name: Run App in Background
        run: |
          docker run -d --name myapp --network zapnet -p 5000:5000 myapp:latest
          sleep 15
      
      
      - name: Run OWASP ZAP Baseline Scan
        run: |
          docker run --rm --network zapnet ghcr.io/zaproxy/zaproxy:latest \
            zap-baseline.py -t http://myapp:5000 -I -x -
    
  build:          
    name: Build Application
    runs-on: ubuntu-latest
    needs: dast
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  
      - name: Run tests (optional)
        run: |
          if [ -f pytest.ini ] || [ -d tests ]; then pytest; fi
  
    
  
  docker:
    name: Build and Scan Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker build -t your_dockerhub_username/your_image_name:latest .

      - name: Scan Docker image with Trivy
        run: |
          trivy image --exit-code 1 --severity HIGH,CRITICAL your_dockerhub_username/your_image_name:latest

  push:
    name: Push Docker Image to Docker Hub
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: Sandesh Hypha
          password: Sandy@100!

      - name: Push Docker image
        run: docker push your_dockerhub_username/your_image_name:latest
